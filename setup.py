from cx_Freeze import setup, Executable
import os
import shutil

dll_dir = "C:/Windows/System32"
msvcp = os.path.join(dll_dir, "msvcp140.dll")
vcomp = os.path.join(dll_dir, "vcomp140.dll")
build_exe_options = {
    "packages": ["os", "sqlite3", "http.server", "socketserver", "threading", "time", "json", "webbrowser"],
    "include_files": [
        "templates/",
        "market_data.db"
        # –ù–µ –≤–∫–ª—é—á–∞–µ–º DLL —Å—é–¥–∞ ‚Äî –æ–Ω–∏ –±—É–¥—É—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä—É—á–Ω—É—é
    ],
    "excludes": ["tkinter"],
}


setup(
    name = "server",
    version = "1.0",
    description = "–õ–æ–∫–∞–ª—å–Ω—ã–π HTTP —Å–µ—Ä–≤–µ—Ä",
    options={"build_exe": build_exe_options},
    executables = [Executable("run_server.py", target_name="my_server.exe", base="Console")]
)

# üîΩ –ö–û–ü–ò–†–£–ï–ú DLL –ü–û–°–õ–ï –°–ë–û–†–ö–ò
build_dir = "build"
exe_dir = None

# –ò—â–µ–º –ø–æ–¥–ø–∞–ø–∫—É —Å exe (–Ω–∞–ø—Ä–∏–º–µ—Ä, build/exe.win-amd64-3.11)
for name in os.listdir(build_dir):
    full_path = os.path.join(build_dir, name)
    if os.path.isdir(full_path) and name.startswith("exe"):
        exe_dir = full_path
        break

if exe_dir:
    print(f"‚Üí –ö–æ–ø–∏—Ä—É–µ–º DLL –≤: {exe_dir}")
    try:
        shutil.copy(msvcp, os.path.join(exe_dir, "msvcp140.dll"))
        shutil.copy(vcomp, os.path.join(exe_dir, "vcomp140.dll"))
        print("‚úÖ DLL —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ DLL: {e}")
else:
    print("‚ùå –ü–∞–ø–∫–∞ exe –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")